# Workflow for deploying a Next.js site to GitHub Pages
name: Deploy Next.js site to Pages

on:
  push:
    branches: ['main'] # Trigger the workflow on pushes to the main branch
  workflow_dispatch: # Allow manual trigger from the Actions tab

# Permissions for the GitHub token
permissions:
  contents: read # Allows reading repository contents
  pages: write # Allows writing to GitHub Pages
  id-token: write # Required for certain deployments

# Ensure only one deployment runs at a time
concurrency:
  group: 'pages'
  cancel-in-progress: false # Do not cancel ongoing deployments

jobs:
  build: # Job to build the application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout # Checkout the repository
        uses: actions/checkout@v4

      - name: Detect package manager # Automatically detect if using npm, yarn, or pnpm
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
              echo "manager=pnpm" >> $GITHUB_OUTPUT
              echo "command=install" >> $GITHUB_OUTPUT
              echo "runner=pnpm" >> $GITHUB_OUTPUT
              exit 0
            else
              echo "manager=npm" >> $GITHUB_OUTPUT
              echo "command=ci" >> $GITHUB_OUTPUT
              echo "runner=npx --no-install" >> $GITHUB_OUTPUT
              exit 0
            fi
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup pnpm # Set up pnpm if it's the detected package manager
        if: ${{ steps.detect-package-manager.outputs.manager == 'pnpm' }}
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node # Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies # Install project dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        env:
          NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
          NODE_ENV: production
        run: |
          echo "NEXT_PUBLIC_GA_ID=$NEXT_PUBLIC_GA_ID" >> .env
          ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Add .nojekyll file
        run: touch ./out/.nojekyll

      - name: Upload artifact # Upload the built output for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy: # Job to deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Ensure build job completes before deploying
    steps:
      - name: Deploy to GitHub Pages # Deploy the built application
        id: deployment
        uses: actions/deploy-pages@v4
